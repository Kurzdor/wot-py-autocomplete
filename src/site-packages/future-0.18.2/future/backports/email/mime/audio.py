# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/site-packages/future-0.18.2/future/backports/email/mime/audio.py
from __future__ import unicode_literals
from __future__ import division
from __future__ import absolute_import
__all__ = [u'MIMEAudio']
import sndhdr
from io import BytesIO
from future.backports.email import encoders
from future.backports.email.mime.nonmultipart import MIMENonMultipart
_sndhdr_MIMEmap = {u'au': u'basic',
 u'wav': u'x-wav',
 u'aiff': u'x-aiff',
 u'aifc': u'x-aiff'}

def _whatsnd(data):
    hdr = data[:512]
    fakefile = BytesIO(hdr)
    for testfn in sndhdr.tests:
        res = testfn(hdr, fakefile)
        if res is not None:
            return _sndhdr_MIMEmap.get(res[0])

    return


class MIMEAudio(MIMENonMultipart):

    def __init__(self, _audiodata, _subtype=None, _encoder=encoders.encode_base64, **_params):
        if _subtype is None:
            _subtype = _whatsnd(_audiodata)
        if _subtype is None:
            raise TypeError(u'Could not find audio MIME subtype')
        MIMENonMultipart.__init__(self, u'audio', _subtype, **_params)
        self.set_payload(_audiodata)
        _encoder(self)
        return
