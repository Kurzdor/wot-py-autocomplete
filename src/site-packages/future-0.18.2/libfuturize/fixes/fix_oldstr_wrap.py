# Python bytecode 2.7 (decompiled from Python 2.7)
# Embedded file name: scripts/common/site-packages/future-0.18.2/libfuturize/fixes/fix_oldstr_wrap.py
from __future__ import unicode_literals
import re
from lib2to3 import fixer_base
from lib2to3.pgen2 import token
from lib2to3.fixer_util import syms
from libfuturize.fixer_util import future_import, touch_import_top, wrap_in_fn_call
_literal_re = re.compile(u'[^uUrR]?[\\\'\\"]')

class FixOldstrWrap(fixer_base.BaseFix):
    BM_compatible = True
    PATTERN = u'STRING'

    def transform(self, node, results):
        if node.type == token.STRING:
            touch_import_top(u'past.types', u'oldstr', node)
            if _literal_re.match(node.value):
                new = node.clone()
                new.prefix = u''
                new.value = u'b' + new.value
                wrapped = wrap_in_fn_call(u'oldstr', [new], prefix=node.prefix)
                return wrapped
